C51 COMPILER V9.59.0.0   PUMP_ATOB                                                         01/09/2019 16:29:42 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE PUMP_ATOB
OBJECT MODULE PLACED IN pump_AtoB.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE pump_AtoB.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2          #include<main.h>
   3          #include "lcd.h"
   4          #include "STC_ISP_RW.h"
   5          #include "pump_AtoB.h"
   6          
   7          void Send_Data_B( uchar Flag,uchar Data_H,uchar Data_L);
   8          void   OUTPUT(uchar Send_D);   //向第二块单片机发送数据
   9          /***************************************************************/
  10          //泵启动
  11          void  Pump_run(void)
  12            {
  13   1        Send_Data_B(0x52,0x00,0x00);
  14   1        //显示" RUN"
  15   1             LCD_WRI(0x9E);
  16   1                 LCD_WRD(0x20);
  17   1                 LCD_WRD(0x52);
  18   1                 LCD_WRD(0x55);
  19   1                 LCD_WRD(0x4E);
  20   1      
  21   1        }     
  22          /***************************************************************/                  
  23           //泵停止
  24          void  Pump_stop(void)
  25            {
  26   1         Send_Data_B(0x53,0x00,0x00);
  27   1         //显示"STOP"
  28   1             LCD_WRI(0x9E);
  29   1                 LCD_WRD(0x53);
  30   1                 LCD_WRD(0x54);
  31   1                 LCD_WRD(0x4F);
  32   1                 LCD_WRD(0x50);
  33   1        }     
  34           /*************************************************************/
  35           //泵流量                 
  36          void  Pump_flow( uint p_flow) 
  37            {
  38   1         uchar Data_H,Data_L,segment;
  39   1         uint EEPROM_dir=0x8600,EEPROM_data;
  40   1         uint p_step;
  41   1         unsigned long P_plus;
  42   1      //-------------------------------------------
  43   1         if(p_flow>=1)
  44   1         segment=(p_flow-1)/10;
  45   1         else
  46   1         segment=0;
  47   1      //-------------------------------------------
  48   1      //从EEPROM里读出参数值   
  49   1               EEPROM_dir=EEPROM_dir+segment*2;
  50   1           EEPROM_data=EEPROM_byte_read(EEPROM_dir)<<8;
  51   1               EEPROM_data=EEPROM_data+EEPROM_byte_read(EEPROM_dir+1);
  52   1               
  53   1      //-------------------------------------------
  54   1        P_plus=EEPROM_data*(segment+1); 
  55   1        P_plus=P_plus*10;
C51 COMPILER V9.59.0.0   PUMP_ATOB                                                         01/09/2019 16:29:42 PAGE 2   

  56   1      
  57   1        P_plus=P_plus/p_flow;
  58   1           if(P_plus<=65535)
  59   1                 {
  60   2                  p_step=P_plus; 
  61   2                 }
  62   1                else
  63   1                 {
  64   2                  p_step=65535; 
  65   2                 }
  66   1      //-------------------------------------------        
  67   1        Data_H=p_step>>8;
  68   1        Data_L=p_step & 0x00FF;
  69   1        Send_Data_B(0x46,Data_H,Data_L);
  70   1        }
  71          /************************************************************/
  72          void Send_Data_B( uchar Flag,uchar Data_H,uchar Data_L)
  73            {
  74   1         uchar i;
  75   1      //---------------
  76   1      //中断
  77   1         P2_2=0;
  78   1         P2_2=0;
  79   1         P2_2=0;
  80   1         P2_2=1;
  81   1      //----------------
  82   1      //;发送去错数字 1
  83   1         OUTPUT(0x00);
  84   1         for(i=100;i<=0;i--);
  85   1      //-----------------
  86   1         OUTPUT(Flag);
  87   1         for(i=100;i<=0;i--);
  88   1      //-----------------
  89   1         OUTPUT(Data_H);
  90   1         for(i=100;i<=0;i--);
  91   1      //-----------------
  92   1         OUTPUT(Data_L);
  93   1         for(i=100;i<=0;i--);
  94   1      //-----------------
  95   1      //多发一个 
  96   1         OUTPUT(0x00);
  97   1         for(i=100;i<=0;i--);
  98   1        }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    501    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      16
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
